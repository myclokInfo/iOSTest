version: 2
jobs:
  build: # job name
    docker: # Each job requires specifying an executor
    # (either docker, macos, or machine), see
    # circleci.com/docs/2.0/executor-types/ for a comparison
    # and more examples.
      - image: circleci/ruby:2.5.1-node
      - image: circleci/postgres:10.4.0-alpine
    steps:
      - checkout
      - save_cache: # Caches dependencies with a cache key
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/circleci-demo-workflows	
  build2:
    macos:
      xcode: "10.0.0"
    working_directory: ~/project/myclok/
    # use a --login shell so our "set Ruby version" command gets picked up for later steps
    shell: /bin/bash --login -o pipefail
    environment:
      FL_OUTPUT_DIR: output

    steps:
      - add-ssh-keys:
          fingerprints:
            - "d7:65:f7:c0:87:1b:e1:f2:0c:9d:e9:dd:9f:c9:f1:fc"
      - checkout
      - run:
          name: Set Ruby version
          command: echo "ruby-2.5.1" > ~/.ruby-version
      - run:
          name: Bundle install
          command: gem install rake && bundle install
      - run:
          name: Clone TestRubyRepo Web repo
          command: |
            git clone git@github.com:myclokInfo/TestRubyRepo.git
            cd TestRubyRepo
            git checkout develop
            sudo gem install rails
            bundle install
      - run:
          name: Boot rails server
          command: |
           cd TestRubyRepo
           rails server
          background: true
      - checkout
      - run:
          name: Run unit tests
          command: |
            if [ "${CIRCLE_BRANCH}" == "MOB-1515/smoke-test" ]; then
              bash .circleci/smoke-tests.sh
            fi

            if [ "${CIRCLE_BRANCH}" != "MOB-1515/smoke-test" ]; then
               bash .circleci/run-tests.sh
            fi
      - store_test_results:
          path: output/scan
      - store_artifacts:
          path: output

workflows:
  version: 2
  build-and-test:
    jobs:
      - build